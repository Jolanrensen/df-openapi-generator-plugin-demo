/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package guru.apis.apisGuru.apis

import guru.apis.apisGuru.models.API
import guru.apis.apisGuru.models.GetProviders200Response
import guru.apis.apisGuru.models.GetServices200Response
import guru.apis.apisGuru.models.Metrics

import guru.apis.apisGuru.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.fasterxml.jackson.databind.ObjectMapper

    open class APIsApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: ObjectMapper.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * Retrieve one version of a particular API
        * Returns the API entry for one specific version of an API where there is no serviceName.
         * @param provider  
         * @param api  
         * @return API
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getAPI(provider: kotlin.String, api: kotlin.String): HttpResponse<API> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/specs/{provider}/{api}.json".replace("{" + "provider" + "}", "$provider").replace("{" + "api" + "}", "$api"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * Get basic metrics
        * Some basic metrics for the entire directory. Just stunning numbers to put on a front page and are intended purely for WoW effect :) 
         * @return Metrics
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getMetrics(): HttpResponse<Metrics> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/metrics.json",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * List all APIs for a particular provider
        * List all APIs in the directory for a particular providerName Returns links to the individual API entry for each API. 
         * @param provider  
         * @return kotlin.collections.Map<kotlin.String, API>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getProvider(provider: kotlin.String): HttpResponse<kotlin.collections.Map<kotlin.String, API>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/{provider}.json".replace("{" + "provider" + "}", "$provider"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * List all providers
        * List all the providers in the directory 
         * @return GetProviders200Response
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getProviders(): HttpResponse<GetProviders200Response> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/providers.json",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * Retrieve one version of a particular API with a serviceName.
        * Returns the API entry for one specific version of an API where there is a serviceName.
         * @param provider  
         * @param service  
         * @param api  
         * @return API
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getServiceAPI(provider: kotlin.String, service: kotlin.String, api: kotlin.String): HttpResponse<API> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/specs/{provider}/{service}/{api}.json".replace("{" + "provider" + "}", "$provider").replace("{" + "service" + "}", "$service").replace("{" + "api" + "}", "$api"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * List all serviceNames for a particular provider
        * List all serviceNames in the directory for a particular providerName 
         * @param provider  
         * @return GetServices200Response
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getServices(provider: kotlin.String): HttpResponse<GetServices200Response> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/{provider}/services.json".replace("{" + "provider" + "}", "$provider"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * List all APIs
        * List all APIs in the directory. Returns links to the OpenAPI definitions for each API in the directory. If API exist in multiple versions &#x60;preferred&#x60; one is explicitly marked. Some basic info from the OpenAPI definition is cached inside each object. This allows you to generate some simple views without needing to fetch the OpenAPI definition for each API. 
         * @return kotlin.collections.Map<kotlin.String, API>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun listAPIs(): HttpResponse<kotlin.collections.Map<kotlin.String, API>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/list.json",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }
